{
  "D:\\AWS API Gateway CRUD REST API\\simple-crud-api\\serverless.yml": {
    "versionFramework": "4.19.0",
    "servicePath": "D:\\AWS API Gateway CRUD REST API\\simple-crud-api\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "simple-crud-api",
      "frameworkVersion": "4",
      "provider": {
        "name": "aws",
        "runtime": "nodejs22.x",
        "region": "us-east-1",
        "environment": {
          "TABLE_NAME": "simple-crud-api-table-dev"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:PutItem",
              "dynamodb:GetItem",
              "dynamodb:Scan",
              "dynamodb:DeleteItem"
            ],
            "Resource": "arn:aws:dynamodb:us-east-1:*:table/simple-crud-api-table-dev"
          }
        ],
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "CreateLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/simple-crud-api-dev-create"
              }
            },
            "ListLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/simple-crud-api-dev-list"
              }
            },
            "GetLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/simple-crud-api-dev-get"
              }
            },
            "DeleteLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/simple-crud-api-dev-delete"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "simple-crud-api",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/simple-crud-api-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/simple-crud-api-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:PutItem",
                            "dynamodb:GetItem",
                            "dynamodb:Scan",
                            "dynamodb:DeleteItem"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:*:table/simple-crud-api-table-dev"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "simple-crud-api",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "CreateLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
                  "S3Key": "serverless/simple-crud-api/dev/1757989158798-2025-09-16T02:19:18.798Z/simple-crud-api.zip"
                },
                "Handler": "handler.create",
                "Runtime": "nodejs22.x",
                "FunctionName": "simple-crud-api-dev-create",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "TABLE_NAME": "simple-crud-api-table-dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateLogGroup"
              ]
            },
            "ListLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
                  "S3Key": "serverless/simple-crud-api/dev/1757989158798-2025-09-16T02:19:18.798Z/simple-crud-api.zip"
                },
                "Handler": "handler.list",
                "Runtime": "nodejs22.x",
                "FunctionName": "simple-crud-api-dev-list",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "TABLE_NAME": "simple-crud-api-table-dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ListLogGroup"
              ]
            },
            "GetLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
                  "S3Key": "serverless/simple-crud-api/dev/1757989158798-2025-09-16T02:19:18.798Z/simple-crud-api.zip"
                },
                "Handler": "handler.get",
                "Runtime": "nodejs22.x",
                "FunctionName": "simple-crud-api-dev-get",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "TABLE_NAME": "simple-crud-api-table-dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetLogGroup"
              ]
            },
            "DeleteLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
                  "S3Key": "serverless/simple-crud-api/dev/1757989158798-2025-09-16T02:19:18.798Z/simple-crud-api.zip"
                },
                "Handler": "handler.remove",
                "Runtime": "nodejs22.x",
                "FunctionName": "simple-crud-api-dev-delete",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "TABLE_NAME": "simple-crud-api-table-dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteLogGroup"
              ]
            },
            "CreateLambdaVersionNTm7qLv3soDNVdjwDq3eWlpeEnfY0Y3YIV7DvkVXTQc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateLambdaFunction"
                },
                "CodeSha256": "Mzn30BMcoY4uApCAw8e/M8DwAHYBrC4aCQrODvlEpxs="
              }
            },
            "ListLambdaVersion9NzNFh71LT2GSshOhhMSZUPLEqMqgLjyJsefVWschYE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ListLambdaFunction"
                },
                "CodeSha256": "Mzn30BMcoY4uApCAw8e/M8DwAHYBrC4aCQrODvlEpxs="
              }
            },
            "GetLambdaVersionMPqiieCmsmpOuBHwEJ1cGlcF8WFwg5PvOGppKzFA": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetLambdaFunction"
                },
                "CodeSha256": "Mzn30BMcoY4uApCAw8e/M8DwAHYBrC4aCQrODvlEpxs="
              }
            },
            "DeleteLambdaVersionzfB3gQwUnaNGfxy46sTXhosR8iBcGAQrywhCCRBCmg": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteLambdaFunction"
                },
                "CodeSha256": "Mzn30BMcoY4uApCAw8e/M8DwAHYBrC4aCQrODvlEpxs="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-simple-crud-api",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "CreateLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationCreate": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "CreateLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostItems": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /items",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationCreate"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationCreate"
            },
            "ListLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ListLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationList": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "ListLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetItems": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /items",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationList"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationList"
            },
            "GetLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationGet": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "GetLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetItemsIdVar": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /items/{id}",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationGet"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationGet"
            },
            "DeleteLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationDelete": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "DeleteLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteDeleteItemsIdVar": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "DELETE /items/{id}",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationDelete"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationDelete"
            },
            "ItemsTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "simple-crud-api-table-dev",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
              "Export": {
                "Name": "sls-simple-crud-api-dev-ServerlessDeploymentBucketName"
              }
            },
            "CreateLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateLambdaVersionNTm7qLv3soDNVdjwDq3eWlpeEnfY0Y3YIV7DvkVXTQc"
              },
              "Export": {
                "Name": "sls-simple-crud-api-dev-CreateLambdaFunctionQualifiedArn"
              }
            },
            "ListLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ListLambdaVersion9NzNFh71LT2GSshOhhMSZUPLEqMqgLjyJsefVWschYE"
              },
              "Export": {
                "Name": "sls-simple-crud-api-dev-ListLambdaFunctionQualifiedArn"
              }
            },
            "GetLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetLambdaVersionMPqiieCmsmpOuBHwEJ1cGlcF8WFwg5PvOGppKzFA"
              },
              "Export": {
                "Name": "sls-simple-crud-api-dev-GetLambdaFunctionQualifiedArn"
              }
            },
            "DeleteLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteLambdaVersionzfB3gQwUnaNGfxy46sTXhosR8iBcGAQrywhCCRBCmg"
              },
              "Export": {
                "Name": "sls-simple-crud-api-dev-DeleteLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-simple-crud-api-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-simple-crud-api-dev-HttpApiUrl"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "create": {
          "handler": "handler.create",
          "events": [
            {
              "httpApi": {
                "path": "/items",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/items"
            }
          ],
          "name": "simple-crud-api-dev-create",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "CreateLambdaVersionNTm7qLv3soDNVdjwDq3eWlpeEnfY0Y3YIV7DvkVXTQc"
        },
        "list": {
          "handler": "handler.list",
          "events": [
            {
              "httpApi": {
                "path": "/items",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/items"
            }
          ],
          "name": "simple-crud-api-dev-list",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "ListLambdaVersion9NzNFh71LT2GSshOhhMSZUPLEqMqgLjyJsefVWschYE"
        },
        "get": {
          "handler": "handler.get",
          "events": [
            {
              "httpApi": {
                "path": "/items/{id}",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/items/{id}"
            }
          ],
          "name": "simple-crud-api-dev-get",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "GetLambdaVersionMPqiieCmsmpOuBHwEJ1cGlcF8WFwg5PvOGppKzFA"
        },
        "delete": {
          "handler": "handler.remove",
          "events": [
            {
              "httpApi": {
                "path": "/items/{id}",
                "method": "delete"
              },
              "resolvedMethod": "DELETE",
              "resolvedPath": "/items/{id}"
            }
          ],
          "name": "simple-crud-api-dev-delete",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "DeleteLambdaVersionzfB3gQwUnaNGfxy46sTXhosR8iBcGAQrywhCCRBCmg"
        }
      },
      "resources": {
        "Resources": {
          "ItemsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "simple-crud-api-table-dev",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {}
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs22.x",
      "region": "us-east-1",
      "environment": {
        "TABLE_NAME": "simple-crud-api-table-dev"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem",
            "dynamodb:GetItem",
            "dynamodb:Scan",
            "dynamodb:DeleteItem"
          ],
          "Resource": "arn:aws:dynamodb:us-east-1:*:table/simple-crud-api-table-dev"
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "CreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/simple-crud-api-dev-create"
            }
          },
          "ListLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/simple-crud-api-dev-list"
            }
          },
          "GetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/simple-crud-api-dev-get"
            }
          },
          "DeleteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/simple-crud-api-dev-delete"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "simple-crud-api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/simple-crud-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/simple-crud-api-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem",
                          "dynamodb:GetItem",
                          "dynamodb:Scan",
                          "dynamodb:DeleteItem"
                        ],
                        "Resource": "arn:aws:dynamodb:us-east-1:*:table/simple-crud-api-table-dev"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "simple-crud-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
                "S3Key": "serverless/simple-crud-api/dev/1757989158798-2025-09-16T02:19:18.798Z/simple-crud-api.zip"
              },
              "Handler": "handler.create",
              "Runtime": "nodejs22.x",
              "FunctionName": "simple-crud-api-dev-create",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "simple-crud-api-table-dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateLogGroup"
            ]
          },
          "ListLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
                "S3Key": "serverless/simple-crud-api/dev/1757989158798-2025-09-16T02:19:18.798Z/simple-crud-api.zip"
              },
              "Handler": "handler.list",
              "Runtime": "nodejs22.x",
              "FunctionName": "simple-crud-api-dev-list",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "simple-crud-api-table-dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListLogGroup"
            ]
          },
          "GetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
                "S3Key": "serverless/simple-crud-api/dev/1757989158798-2025-09-16T02:19:18.798Z/simple-crud-api.zip"
              },
              "Handler": "handler.get",
              "Runtime": "nodejs22.x",
              "FunctionName": "simple-crud-api-dev-get",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "simple-crud-api-table-dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetLogGroup"
            ]
          },
          "DeleteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
                "S3Key": "serverless/simple-crud-api/dev/1757989158798-2025-09-16T02:19:18.798Z/simple-crud-api.zip"
              },
              "Handler": "handler.remove",
              "Runtime": "nodejs22.x",
              "FunctionName": "simple-crud-api-dev-delete",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "simple-crud-api-table-dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteLogGroup"
            ]
          },
          "CreateLambdaVersionNTm7qLv3soDNVdjwDq3eWlpeEnfY0Y3YIV7DvkVXTQc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateLambdaFunction"
              },
              "CodeSha256": "Mzn30BMcoY4uApCAw8e/M8DwAHYBrC4aCQrODvlEpxs="
            }
          },
          "ListLambdaVersion9NzNFh71LT2GSshOhhMSZUPLEqMqgLjyJsefVWschYE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListLambdaFunction"
              },
              "CodeSha256": "Mzn30BMcoY4uApCAw8e/M8DwAHYBrC4aCQrODvlEpxs="
            }
          },
          "GetLambdaVersionMPqiieCmsmpOuBHwEJ1cGlcF8WFwg5PvOGppKzFA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetLambdaFunction"
              },
              "CodeSha256": "Mzn30BMcoY4uApCAw8e/M8DwAHYBrC4aCQrODvlEpxs="
            }
          },
          "DeleteLambdaVersionzfB3gQwUnaNGfxy46sTXhosR8iBcGAQrywhCCRBCmg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteLambdaFunction"
              },
              "CodeSha256": "Mzn30BMcoY4uApCAw8e/M8DwAHYBrC4aCQrODvlEpxs="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-simple-crud-api",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "CreateLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreate": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "CreateLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostItems": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /items",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreate"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreate"
          },
          "ListLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationList": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "ListLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetItems": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /items",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationList"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationList"
          },
          "GetLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGet": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "GetLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetItemsIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /items/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGet"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGet"
          },
          "DeleteLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationDelete": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "DeleteLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteItemsIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /items/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationDelete"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationDelete"
          },
          "ItemsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "simple-crud-api-table-dev",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
            "Export": {
              "Name": "sls-simple-crud-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "CreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateLambdaVersionNTm7qLv3soDNVdjwDq3eWlpeEnfY0Y3YIV7DvkVXTQc"
            },
            "Export": {
              "Name": "sls-simple-crud-api-dev-CreateLambdaFunctionQualifiedArn"
            }
          },
          "ListLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListLambdaVersion9NzNFh71LT2GSshOhhMSZUPLEqMqgLjyJsefVWschYE"
            },
            "Export": {
              "Name": "sls-simple-crud-api-dev-ListLambdaFunctionQualifiedArn"
            }
          },
          "GetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetLambdaVersionMPqiieCmsmpOuBHwEJ1cGlcF8WFwg5PvOGppKzFA"
            },
            "Export": {
              "Name": "sls-simple-crud-api-dev-GetLambdaFunctionQualifiedArn"
            }
          },
          "DeleteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteLambdaVersionzfB3gQwUnaNGfxy46sTXhosR8iBcGAQrywhCCRBCmg"
            },
            "Export": {
              "Name": "sls-simple-crud-api-dev-DeleteLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-simple-crud-api-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-simple-crud-api-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: simple-crud-api\r\nframeworkVersion: \"4\"\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs22.x\r\n  region: us-east-1\r\n  environment:\r\n    TABLE_NAME: ${self:service}-table-${sls:stage}\r\n  iamRoleStatements:\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:PutItem\r\n        - dynamodb:GetItem\r\n        - dynamodb:Scan\r\n        - dynamodb:DeleteItem\r\n      Resource:\r\n        - arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.TABLE_NAME}\r\n\r\nfunctions:\r\n  create:\r\n    handler: handler.create\r\n    events:\r\n      - httpApi:\r\n          path: /items\r\n          method: post\r\n\r\n  list:\r\n    handler: handler.list\r\n    events:\r\n      - httpApi:\r\n          path: /items\r\n          method: get\r\n\r\n  get:\r\n    handler: handler.get\r\n    events:\r\n      - httpApi:\r\n          path: /items/{id}\r\n          method: get\r\n\r\n  delete:\r\n    handler: handler.remove\r\n    events:\r\n      - httpApi:\r\n          path: /items/{id}\r\n          method: delete\r\n\r\nresources:\r\n  Resources:\r\n    ItemsTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:provider.environment.TABLE_NAME}\r\n        AttributeDefinitions:\r\n          - AttributeName: id\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: id\r\n            KeyType: HASH\r\n        BillingMode: PAY_PER_REQUEST\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "be4afcca-3ad1-4ce7-9160-802ce6175e76",
    "orgName": "loigo1220",
    "userId": "B0zyrYlt9bhn28W3JN",
    "userName": "loigo1220",
    "serviceProviderAwsAccountId": "282927508538",
    "serviceProviderAwsCfStackName": "simple-crud-api-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:282927508538:stack/simple-crud-api-dev/cd059350-92a1-11f0-b860-125e39da79d7",
    "serviceProviderAwsCfStackCreated": "2025-09-16T02:06:47.700Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "DeleteLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:282927508538:function:simple-crud-api-dev-delete:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-simple-crud-api-dev-DeleteLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:282927508538:function:simple-crud-api-dev-create:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-simple-crud-api-dev-CreateLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:282927508538:function:simple-crud-api-dev-get:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-simple-crud-api-dev-GetLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "45j8nac9ch",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-simple-crud-api-dev-HttpApiId"
      },
      {
        "OutputKey": "ListLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:282927508538:function:simple-crud-api-dev-list:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-simple-crud-api-dev-ListLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
        "ExportName": "sls-simple-crud-api-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://45j8nac9ch.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-simple-crud-api-dev-HttpApiUrl"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "CreateLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/simple-crud-api-dev-create"
          }
        },
        "ListLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/simple-crud-api-dev-list"
          }
        },
        "GetLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/simple-crud-api-dev-get"
          }
        },
        "DeleteLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/simple-crud-api-dev-delete"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "simple-crud-api",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/simple-crud-api-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/simple-crud-api-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:GetItem",
                        "dynamodb:Scan",
                        "dynamodb:DeleteItem"
                      ],
                      "Resource": "arn:aws:dynamodb:us-east-1:*:table/simple-crud-api-table-dev"
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "simple-crud-api",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "CreateLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
              "S3Key": "serverless/simple-crud-api/dev/1757989158798-2025-09-16T02:19:18.798Z/simple-crud-api.zip"
            },
            "Handler": "handler.create",
            "Runtime": "nodejs22.x",
            "FunctionName": "simple-crud-api-dev-create",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "TABLE_NAME": "simple-crud-api-table-dev"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "CreateLogGroup"
          ]
        },
        "ListLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
              "S3Key": "serverless/simple-crud-api/dev/1757989158798-2025-09-16T02:19:18.798Z/simple-crud-api.zip"
            },
            "Handler": "handler.list",
            "Runtime": "nodejs22.x",
            "FunctionName": "simple-crud-api-dev-list",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "TABLE_NAME": "simple-crud-api-table-dev"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "ListLogGroup"
          ]
        },
        "GetLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
              "S3Key": "serverless/simple-crud-api/dev/1757989158798-2025-09-16T02:19:18.798Z/simple-crud-api.zip"
            },
            "Handler": "handler.get",
            "Runtime": "nodejs22.x",
            "FunctionName": "simple-crud-api-dev-get",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "TABLE_NAME": "simple-crud-api-table-dev"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "GetLogGroup"
          ]
        },
        "DeleteLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
              "S3Key": "serverless/simple-crud-api/dev/1757989158798-2025-09-16T02:19:18.798Z/simple-crud-api.zip"
            },
            "Handler": "handler.remove",
            "Runtime": "nodejs22.x",
            "FunctionName": "simple-crud-api-dev-delete",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "TABLE_NAME": "simple-crud-api-table-dev"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "DeleteLogGroup"
          ]
        },
        "CreateLambdaVersionNTm7qLv3soDNVdjwDq3eWlpeEnfY0Y3YIV7DvkVXTQc": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "CreateLambdaFunction"
            },
            "CodeSha256": "Mzn30BMcoY4uApCAw8e/M8DwAHYBrC4aCQrODvlEpxs="
          }
        },
        "ListLambdaVersion9NzNFh71LT2GSshOhhMSZUPLEqMqgLjyJsefVWschYE": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "ListLambdaFunction"
            },
            "CodeSha256": "Mzn30BMcoY4uApCAw8e/M8DwAHYBrC4aCQrODvlEpxs="
          }
        },
        "GetLambdaVersionMPqiieCmsmpOuBHwEJ1cGlcF8WFwg5PvOGppKzFA": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "GetLambdaFunction"
            },
            "CodeSha256": "Mzn30BMcoY4uApCAw8e/M8DwAHYBrC4aCQrODvlEpxs="
          }
        },
        "DeleteLambdaVersionzfB3gQwUnaNGfxy46sTXhosR8iBcGAQrywhCCRBCmg": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "DeleteLambdaFunction"
            },
            "CodeSha256": "Mzn30BMcoY4uApCAw8e/M8DwAHYBrC4aCQrODvlEpxs="
          }
        },
        "HttpApi": {
          "Type": "AWS::ApiGatewayV2::Api",
          "Properties": {
            "Name": "dev-simple-crud-api",
            "ProtocolType": "HTTP"
          }
        },
        "HttpApiStage": {
          "Type": "AWS::ApiGatewayV2::Stage",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "StageName": "$default",
            "AutoDeploy": true,
            "DefaultRouteSettings": {
              "DetailedMetricsEnabled": false
            }
          }
        },
        "CreateLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "CreateLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationCreate": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "CreateLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRoutePostItems": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "POST /items",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationCreate"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationCreate"
        },
        "ListLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "ListLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationList": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "ListLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRouteGetItems": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "GET /items",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationList"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationList"
        },
        "GetLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationGet": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "GetLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRouteGetItemsIdVar": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "GET /items/{id}",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationGet"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationGet"
        },
        "DeleteLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "DeleteLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationDelete": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "DeleteLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRouteDeleteItemsIdVar": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "DELETE /items/{id}",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationDelete"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationDelete"
        },
        "ItemsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "simple-crud-api-table-dev",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-east-1-b5cbf93c-ca42",
          "Export": {
            "Name": "sls-simple-crud-api-dev-ServerlessDeploymentBucketName"
          }
        },
        "CreateLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "CreateLambdaVersionNTm7qLv3soDNVdjwDq3eWlpeEnfY0Y3YIV7DvkVXTQc"
          },
          "Export": {
            "Name": "sls-simple-crud-api-dev-CreateLambdaFunctionQualifiedArn"
          }
        },
        "ListLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "ListLambdaVersion9NzNFh71LT2GSshOhhMSZUPLEqMqgLjyJsefVWschYE"
          },
          "Export": {
            "Name": "sls-simple-crud-api-dev-ListLambdaFunctionQualifiedArn"
          }
        },
        "GetLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "GetLambdaVersionMPqiieCmsmpOuBHwEJ1cGlcF8WFwg5PvOGppKzFA"
          },
          "Export": {
            "Name": "sls-simple-crud-api-dev-GetLambdaFunctionQualifiedArn"
          }
        },
        "DeleteLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "DeleteLambdaVersionzfB3gQwUnaNGfxy46sTXhosR8iBcGAQrywhCCRBCmg"
          },
          "Export": {
            "Name": "sls-simple-crud-api-dev-DeleteLambdaFunctionQualifiedArn"
          }
        },
        "HttpApiId": {
          "Description": "Id of the HTTP API",
          "Value": {
            "Ref": "HttpApi"
          },
          "Export": {
            "Name": "sls-simple-crud-api-dev-HttpApiId"
          }
        },
        "HttpApiUrl": {
          "Description": "URL of the HTTP API",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "HttpApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                }
              ]
            ]
          },
          "Export": {
            "Name": "sls-simple-crud-api-dev-HttpApiUrl"
          }
        }
      }
    }
  }
}